version: '3'
services:
  postgres-db-prod:
    image: postgres:17
    networks:
      - fastify_network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: learn_fastify_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  redis-cache-prod:
    image: redis:7
    command: redis-server --save 20 1 --loglevel warning --requirepass myredissecurepassword
    networks:
      - fastify_network    
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  fastify-app-prod:
    depends_on:
      - postgres-db-prod  
      - redis-cache-prod
    networks:
      - fastify_network      
    build:
      context: ../.. # Mengarahkan build context ke folder root untuk mengakses seluruh kode aplikasi
      dockerfile: deployment/production-microservices/Dockerfile # Menentukan path ke Dockerfile di folder ./deployment/production
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: production
  fastify-app-prod-auth-1:
    depends_on:
      - postgres-db-prod  
      - redis-cache-prod
    networks:
      - fastify_network      
    build:
      context: ../.. # Mengarahkan build context ke folder root untuk mengakses seluruh kode aplikasi
      dockerfile: deployment/production-microservices/Dockerfile.auth # Menentukan path ke Dockerfile di folder ./deployment/production
    ports:
      - "8081:8080"
    environment:
      NODE_ENV: production
  fastify-app-prod-auth-2:
    depends_on:
      - postgres-db-prod  
      - redis-cache-prod
    networks:
      - fastify_network      
    build:
      context: ../.. # Mengarahkan build context ke folder root untuk mengakses seluruh kode aplikasi
      dockerfile: deployment/production-microservices/Dockerfile.auth # Menentukan path ke Dockerfile di folder ./deployment/production
    ports:
      - "8082:8080"
    environment:
      NODE_ENV: production
  fastify-app-prod-users-1:
    depends_on:
      - postgres-db-prod  
      - redis-cache-prod
    networks:
      - fastify_network      
    build:
      context: ../.. # Mengarahkan build context ke folder root untuk mengakses seluruh kode aplikasi
      dockerfile: deployment/production-microservices/Dockerfile.users # Menentukan path ke Dockerfile di folder ./deployment/production
    ports:
      - "8083:8080"
    environment:
      NODE_ENV: production
  fastify-app-prod-users-2:
    depends_on:
      - postgres-db-prod  
      - redis-cache-prod
    networks:
      - fastify_network      
    build:
      context: ../.. # Mengarahkan build context ke folder root untuk mengakses seluruh kode aplikasi
      dockerfile: deployment/production-microservices/Dockerfile.users # Menentukan path ke Dockerfile di folder ./deployment/production
    ports:
      - "8084:8080"
    environment:
      NODE_ENV: production      
  nginx:
    image: nginx:latest
    ports:
      - "81:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastify-app-prod
      - fastify-app-prod-users-1
      - fastify-app-prod-users-2
      - fastify-app-prod-auth-1
      - fastify-app-prod-auth-2
    networks:
      - fastify_network      
networks:
  fastify_network:
volumes:
  postgres-data:
  redis-data:
